[{"path":"https://smouksassi.github.io/ggquickeda/articles/AdditionalPlotsStats.html","id":"multiple-y-variables-recoding-continuous-variables-to-categories-and-medinapi","dir":"Articles","previous_headings":"","what":"Multiple Y variables, recoding continuous variables to categories and Medina/PI:","title":"Additional Plots and Stats with ggquickeda","text":"first section illustrate use one y variable generate Median Ribbon showing 95% Prediction interval (default) x variable (Time). Using built-demo dataset: Change mapped y variable(s) Conc Dose (ProTip: can drag drop y variables change order) Categorize/cut subtab select Age cut three binned categories Categorize/cut subtab select Weight cut three quantiles categories Go Color/Group/Split/Size/Fill Mappings map Colour Fill Age Column Split Weight Extra Row split automatically set yvars since selected one y variable. Go Median PIs select Median/PI get plot: can see Dose change time highest Age category present second third weight categories (older subjects higher weights).","code":""},{"path":"https://smouksassi.github.io/ggquickeda/articles/AdditionalPlotsStats.html","id":"boxplots-medianpi-mean","dir":"Articles","previous_headings":"","what":"Boxplots, Median/PI, Mean:","title":"Additional Plots and Stats with ggquickeda","text":"Remove previous mappings column split, colour etc. Change mapped y variable(s) Weight x variable Age remove Weight Recode Quantile Categories select Age instead. Go Points, Lines increase Point Size 6 make transparency points equal 0.1 Explore jitter position including custom one Go Color/Group/Split/Size/Fill map Color :, Group : Fill : Column Split: Gender Go One Row ID(s) select ID keep one row ID Go Median PI uncheck Ignore Mapped Group Median PI uses mapped Gender Group :. Try experiment Label Values? Label N? Keep Label N? checked. Apply selected options screenshot Go Boxplots check Add Boxplot? checkbox. Go back Median PI choose PI 50% boxplot box edges. Go Boxplots try change size outliers remove boxplot legend. Next go Mean (CI) menu select Mean check Show points Force Mean(s) Shape (Diamond used default) Try play various shapes options size mean point(s). Check Label Values? Check Ignore Mapped Color choose Mean Label Geom auto text repel.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/articles/AdditionalPlotsStats.html","id":"continuous-and-categorical-variables-descriptive-stats","dir":"Articles","previous_headings":"","what":"Continuous and categorical variables descriptive stats:","title":"Additional Plots and Stats with ggquickeda","text":"following part generate descriptive stats table reflect plot just add Race. Click Descriptive Stats Tab Map Extra Column Split Gender explore Flip order columns checkbox Try add statistics Statistics display continuous variables Add Race y variable(s) see statistics categorical variable","code":""},{"path":"https://smouksassi.github.io/ggquickeda/articles/AdditionalPlotsStats.html","id":"univariate-plots","dir":"Articles","previous_headings":"","what":"Univariate Plots:","title":"Additional Plots and Stats with ggquickeda","text":"Remove y variable(s) column splits keeping Age x variable gives barplot since Age categorized. Remove Age Recode Quantile Categories goes back numeric variable generated distribution density plot instead barplot. Reapply ID One Row ID(s) data manipulation steps sequential changing something first tab reset steps subsequent ones. Play options Histograms/Density/Bar see affect generated plots.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/articles/Visualizing_Summary_Data.html","id":"published-data","dir":"Articles","previous_headings":"","what":"Published Data","title":"Visualizing Summary Data","text":"data made available csv data file named remdesivirfig3.csv","code":"library(ggquickeda) #load ggquickeda remdesivirdata <- read.csv(\"./remdesivirfig3.csv\") # in vignette folder knitr::kable(remdesivirdata)"},{"path":"https://smouksassi.github.io/ggquickeda/articles/Visualizing_Summary_Data.html","id":"load-the-data-into-the-app","dir":"Articles","previous_headings":"","what":"Load the Data into the app","title":"Visualizing Summary Data","text":"","code":"# from R launch the app with the data  #run_ggquickeda(remdesivirdata)  # if you have access the the app on a server browse to the file and load it"},{"path":"https://smouksassi.github.io/ggquickeda/articles/Visualizing_Summary_Data.html","id":"xy-mappings-and-splitting-options","dir":"Articles","previous_headings":"","what":"X/Y Mappings and Splitting Options","title":"Visualizing Summary Data","text":"Change mapped y variable(s) ‘Subgroupvalue’ Change mapped x variable(s) ‘RRLCI’, ‘Recovery Rate Ratio’ ‘RRUCI’ cancel automatic Extra Column Split set ‘None’ set Select Row Split ‘Subgroup’.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/articles/Visualizing_Summary_Data.html","id":"facets-options","dir":"Articles","previous_headings":"","what":"Facets Options","title":"Visualizing Summary Data","text":"Set Facet Scales ‘free_y’ (allows Subgroupvalue specific Subgroup appear graph panel) Set Facet Spaces ‘free_y’ (allows panel occupy space proportional number unique Subgroupvalue) Set Facet Switch Near Axis ‘y’ (move y strips left) Set Strip Placement ‘outside’ (put y strips left axis) still set text formatting options using group subtabs lower part page: Set Facet Text Angle Y 0 (automatically set) Check Y strip Text Bold Set Facet Text Vertical Justification Y 1 Set Facet Text Horizontal Justification Y 0 (shown screenshot) Set Facet Label ‘Value(s)’ (shown screenshot) point graph:","code":""},{"path":"https://smouksassi.github.io/ggquickeda/articles/Visualizing_Summary_Data.html","id":"ordering-of-variables-and-values","dir":"Articles","previous_headings":"","what":"Ordering of Variables and Values","title":"Visualizing Summary Data","text":"Set Select variable(s) ‘Subgroup’ Drag drop order levels screenshot can add another variable manually drag drop demo next another possibility reorder yvalues using statistic (e.g. median) another variable (Subroupvalueorder): Set Reorder Variable ‘yvalues’ Keep : ‘Median’ Set Variable: ‘Subroupvalueorder’","code":""},{"path":"https://smouksassi.github.io/ggquickeda/articles/Visualizing_Summary_Data.html","id":"remove-default-points-and-add-a-point-interval","dir":"Articles","previous_headings":"","what":"Remove Default Points and add a Point Interval","title":"Visualizing Summary Data","text":"Set Points ‘None’ Set Median ‘Median/PI’ Set PI Geom: ‘errorbar’ Set PI %: 1 (ensures errorbar goes min max values) Uncheck Show lines check Show points Set Median(s) Point(s) Size: 6","code":""},{"path":"https://smouksassi.github.io/ggquickeda/articles/Visualizing_Summary_Data.html","id":"setting-titles-captions-and-logging-the-x-axis","dir":"Articles","previous_headings":"","what":"Setting Titles, Captions and Logging the X axis","title":"Visualizing Summary Data","text":"Type one space Y axis label (removes default label) Type one space X axis label (removes default label) Type “Time Recovery According Subgroup” Plot Title field Type “widths confidence intervals adjusted multiplicity\\nand therefore used infer treatment effects.\\nRace ethnic group reported patients.” Plot Caption field (notice \\n produce line break) Set X Axis scale ‘log10’ now get plot !:","code":""},{"path":"https://smouksassi.github.io/ggquickeda/articles/Visualizing_Summary_Data.html","id":"example-of-what-is-possible-with-ggquickeda","dir":"Articles","previous_headings":"","what":"Example of what is Possible with ggquickeda","title":"Visualizing Summary Data","text":"example even advanced features consider screenshot Intervals Values shown point Size proportional N patients. theme adjustments customize plot legend also done.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Samer Mouksassi. Author, maintainer. Dean Attali. Author. James Craig. Author.           implemented bookmarking created pkgdown website Benjamin Rich. Author.           provided summary stats tables table1 tab code Michael Sachs. Author.           provided ggkm initial code","code":""},{"path":"https://smouksassi.github.io/ggquickeda/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mouksassi S, Attali D, Craig J, Rich B, Sachs M (2024). ggquickeda: Quickly Explore Data Using 'ggplot2' 'table1' Summary Tables. R package version 0.3.1.9000, https://smouksassi.github.io/ggquickeda/, https://github.com/smouksassi/ggquickeda.","code":"@Manual{,   title = {ggquickeda: Quickly Explore Your Data Using 'ggplot2' and 'table1' Summary Tables},   author = {Samer Mouksassi and Dean Attali and James Craig and Benjamin Rich and Michael Sachs},   year = {2024},   note = {R package version 0.3.1.9000, https://smouksassi.github.io/ggquickeda/},   url = {https://github.com/smouksassi/ggquickeda}, }"},{"path":[]},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"ggquickeda R Shiny app/package providing graphical user interface (GUI) ggplot2 table1. enables quickly explore data detect trends fly. can scatter plots, dotplots, boxplots, barplots, histograms, densities summary statistics one multiple variable(s) column(s) splits optional overall column. also km, kmband kmticks geoms/stats facilitate plotting Kaplan-Meier Survival curves. quick overview using older version app head  Youtube Tutorial . recent video tutorial can found : Certara R School Introduction ggquickeda .","code":""},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"installation-and-running-information","dir":"","previous_headings":"","what":"Installation and Running information","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"","code":"# Install from CRAN: install.packages(\"ggquickeda\")  # Or the development version from GitHub: # install.packages(\"remotes\") remotes::install_github(\"smouksassi/ggquickeda\")"},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"use pre-existing csv file launch shiny app navigate csv file load . use data already R launch shiny app dataset object argument: best way learn use ggquickeda load data familiar start experimenting. Try reproduce steps using included sample_df.csv. give idea visuals summaries can generated. package also following vignettes: vignette(\"ggquickeda\") vignette(\"AdditionalPlotsStats\") vignette(\"Visualizing_Summary_Data\")","code":"run_ggquickeda() run_ggquickeda(myRdataset)"},{"path":[]},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"pairs-plot-example","dir":"","previous_headings":"","what":"Pairs Plot Example","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"Export Plots Plot Code tabs contributed along many additions capabilities Dean Attali. plot saved X/Y Plot tab providing name hitting Save plot star button become available exporting. can export portrait, landscape multiple plots per page. Plot Code tab let look source code generated plot various options. helpful get know ggplot2 code. Quick summary statistics tables using Benjamin Rich  table1 package. high level overview things can done various menus:","code":""},{"path":[]},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"inputs","dir":"","previous_headings":"Details","what":"Inputs","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"Choose csv file upload use sample data execute code load csv file internal sample_data.csv: data uploaded first column selected y variable(s): second column x variable:, respectively. simple scatter plot y versus x variables shown. ggquickeda can handle one y variable(s) selections recently one x variable(s). Note x variable(x) different selected y variable(s). Whether user selects one y variable(s), y variable(s) data automatically stacked (gathered) two columns named yvalues (values) yvars (identifier variable value coming ) scatter plot yvalues versus x, faceted plot yvars shown. Mixing categorical continuous variables render yvalues treated character. order selected y variables(s) matters can changed via drag drop. Selections can removed clicking small x. y variable(s) selected histogram (x variable continuous) barplot (x variable categorical) shown. applies ore x variable(x) values named (xvalues) identifier variable name (xvars). x variable(s) selected histogram (y variable continuous) barplot (y variable categorical) shown.","code":"read.csv(\"youruploadeddata.csv\",na.strings = c(\"NA\",\".\"))"},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"data-manipulations","dir":"","previous_headings":"Details","what":"Data Manipulations","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"selecting y variable(s) x variable can directly proceed data manipulation within Inputs tab using following subtabs. Note subtabs execution sequential .e. subtab actions executed order appear. user changes upstream action reset subsequent ones. Recode Binned Categories: Recode one continuous variable(s) 2 10 categories chosen N Cut Breaks Slider. Recode Quantile Categories: Recode one continuous variables(s) chosen number N Quantiles. Powered table1::eqcut. Additional options treat zero separate category (Placebo) treat missing separate category well. Treat Categories: Treat continuous/numeric variable factor. Treat Numeric: Treat factor variable numeric. Custom cuts variable:, defaults min, median, max applied filtering: cut continuous/numeric variable set bins delimited user selected values. default min, median, max filled int varname Cuts field two levels factor generated: [min,median] (median,max]. User can change input comma separated list example: min,value1,value2,max following bins generated: [min,value1] (value1,value2] (value2,max]. Checkbox treat generated levels continuous 0,1,… provided ease plotting operations line. Factor merge (1): Check boxes categories want pool together. Factor merge (n…): user click + Merge another group create new field iteratively merge categories interest. Recode/Reorder Categories subtab dynamic sense user can add/remove variables. non-numeric variable selected another field current variable levels generated. user can reorder levels using drag drop /edit level hitting Backspace typing new character string. Note order chosen reflected yvalues/xvalues separate subtab stacking provided Reorder Facets axis Levels Combine Two Variables enables user select two categorical variables Var1 levels(V1L1,V1L2) Var2 levels(V2L1,V2L2) generate new variable named Var1_Var2 levels V1L1_V2L1, V1L1_V2L2, V1L2_V2L1, V1L2_V2L2 . Filters six sequential filters, three type variable Filter variable (1),Filter variable (2) Filter variable (3) three continuous variables Filter continuous (1), Filter continuous (2) Filter continuous (3). Keep First Row ID(s) Filter data distinct values (one row) selected variable(s) usually identifiers subjects, occasions, arms etc. long data format several variable time invariant repeated helps removing repetitions. User might want first row subject first row subject/occasion combination etc. Keep Last Row ID(s) One Row ID(s) keeping last row instead. Round Values Specified N Digits: Rounding numerical variable specified number digits N Digits. can help come crude binning. Divide Values specified column: Divide column e.g. concentration another like dose. Divide Values constant: Divide specified constant quick unit conversions. Reorder Facets axis Levels Enables user reorder yvalues/xvalues using statistical function (Median, Mean, Minimum, Maximum, length, length unique values, standard deviation sum another variable) checkbox quickly reverse order, desired. user can also manually drag drop levels order change name levels recognized line break.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"graph-options","dir":"","previous_headings":"Details","what":"Graph Options","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"Various options tweak plot: * Controlling y x axis labels, legends commonly used theme options. * Adding title, subtitle caption * Controlling color palette, themes, reference lines .","code":""},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"how-to","dir":"","previous_headings":"Details","what":"How To","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"shorter version walk-within app.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"xy-plot","dir":"","previous_headings":"Details","what":"X/Y Plot","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"Main plot output various options generate plot possibilities include:","code":""},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"summaryregression-functions","dir":"","previous_headings":"Details","what":"Summary/Regression functions","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"Points, Lines Selecting scatter plots points lines control transparency . Color/Group/Split/Size/Fill Mappings ggplot2 built-functionality Group, color, size, fill mappings well two variables column row splits (faceting). Boxplots/Violins Quantile Regression Smooth/Linear/Logistic Regressions Mean (CI/mult_sd) Mean Confidence Intervals multiples SD Median (PIs) Median Prediction Intervals Kaplan-Meier (CI) Survival K-M curves Correlation Coefficient add text label correlation coefficient Text Labels add text label column existent data Rug Marks add rug marks side plot Histograms/Density/Bar (shows X Y ) Pairs Plot Options (shows Plot matrix Y variables )","code":""},{"path":"https://smouksassi.github.io/ggquickeda/index.html","id":"additional-information","dir":"","previous_headings":"Details","what":"Additional Information","title":"Quickly Explore Your Data Using ggplot2 and table1 Summary Tables","text":"Installing package handle installation dependencies. app can also directly launched using command:","code":"shiny::runGitHub('ggquickeda', 'smouksassi', subdir = 'inst/shinyapp')"},{"path":"https://smouksassi.github.io/ggquickeda/reference/attach_source_dep.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach dependencies to source code Attach dependencies to the source code (any input variables are automatically attached) — attach_source_dep","title":"Attach dependencies to source code Attach dependencies to the source code (any input variables are automatically attached) — attach_source_dep","text":"Attach dependencies source code Attach dependencies source code (input variables automatically attached)","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/attach_source_dep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach dependencies to source code Attach dependencies to the source code (any input variables are automatically attached) — attach_source_dep","text":"","code":"attach_source_dep(x, deps)"},{"path":"https://smouksassi.github.io/ggquickeda/reference/cloglog_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"cloglog transformation utility — cloglog_trans","title":"cloglog transformation utility — cloglog_trans","text":"cloglog transformation utility","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/cloglog_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cloglog transformation utility — cloglog_trans","text":"","code":"cloglog_trans()"},{"path":"https://smouksassi.github.io/ggquickeda/reference/cumhaz_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative hazard transformation utility — cumhaz_trans","title":"Cumulative hazard transformation utility — cumhaz_trans","text":"Cumulative hazard transformation utility","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/cumhaz_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative hazard transformation utility — cumhaz_trans","text":"","code":"cumhaz_trans()"},{"path":"https://smouksassi.github.io/ggquickeda/reference/dostep.html","id":null,"dir":"Reference","previous_headings":"","what":"step function utility — dostep","title":"step function utility — dostep","text":"step function utility","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/dostep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"step function utility — dostep","text":"","code":"dostep(x, y)"},{"path":"https://smouksassi.github.io/ggquickeda/reference/event_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Event transformation utility — event_trans","title":"Event transformation utility — event_trans","text":"Event transformation utility","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/event_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Event transformation utility — event_trans","text":"","code":"event_trans()"},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_km.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Kaplan-Meier survival curve — geom_km","title":"Add a Kaplan-Meier survival curve — geom_km","text":"Add Kaplan-Meier survival curve","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_km.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Kaplan-Meier survival curve — geom_km","text":"","code":"geom_km(   mapping = NULL,   data = NULL,   stat = \"km\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   na.rm = TRUE,   ... )"},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_km.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Kaplan-Meier survival curve — geom_km","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_km.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add a Kaplan-Meier survival curve — geom_km","text":"geom_km understands following aesthetics (required aesthetics bold): x survival/censoring times. automatically mapped stat_km() y survival probability estimates. automatically mapped stat_km() smallest level sort order assumed 0, warning. alpha color linetype size","code":""},{"path":[]},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_km.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Kaplan-Meier survival curve — geom_km","text":"","code":"library(ggplot2) set.seed(123) sex <- rbinom(250, 1, .5) df <- data.frame(time = exp(rnorm(250, mean = sex)), status = rbinom(250, 1, .75), sex = sex) ggplot(df, aes(time = time, status = status, color = factor(sex))) + geom_km()"},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmband.html","id":null,"dir":"Reference","previous_headings":"","what":"Add confidence bands to a Kaplan-Meier survival curve — geom_kmband","title":"Add confidence bands to a Kaplan-Meier survival curve — geom_kmband","text":"Add confidence bands Kaplan-Meier survival curve","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmband.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add confidence bands to a Kaplan-Meier survival curve — geom_kmband","text":"","code":"geom_kmband(   mapping = NULL,   data = NULL,   stat = \"kmband\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   na.rm = TRUE,   ... )"},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmband.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add confidence bands to a Kaplan-Meier survival curve — geom_kmband","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmband.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add confidence bands to a Kaplan-Meier survival curve — geom_kmband","text":"geom_kmband understands following aesthetics (required aesthetics bold): x survival/censoring times. automatically mapped stat_kmband() y survival probability estimates. automatically mapped stat_kmband() smallest level sort order assumed 0, warning alpha color linetype linewidth","code":""},{"path":[]},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmband.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add confidence bands to a Kaplan-Meier survival curve — geom_kmband","text":"","code":"library(ggplot2) sex <- rbinom(250, 1, .5) df <- data.frame(time = exp(rnorm(250, mean = sex)), status = rbinom(250, 1, .75), sex = sex) ggplot(df, aes(time = time, status = status, color = factor(sex), fill =factor(sex))) +  geom_km() + geom_kmband()"},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add tick marks to a Kaplan-Meier survival curve — geom_kmticks","title":"Add tick marks to a Kaplan-Meier survival curve — geom_kmticks","text":"Adds tickmarks times censored observations events","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add tick marks to a Kaplan-Meier survival curve — geom_kmticks","text":"","code":"geom_kmticks(   mapping = NULL,   data = NULL,   stat = \"kmticks\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   na.rm = TRUE,   ... )"},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add tick marks to a Kaplan-Meier survival curve — geom_kmticks","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer. using geom_*() function construct layer, stat argument can used override default coupling geoms stats. stat argument accepts following: Stat ggproto subclass, example StatCount. string naming stat. give stat string, strip function name stat_ prefix. example, use stat_count(), give stat \"count\". information ways specify stat, see layer stat documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. ... arguments passed layer()'s params argument. arguments broadly fall one 4 categories . Notably, arguments position argument, aesthetics required can passed .... Unknown arguments part 4 categories ignored. Static aesthetics mapped scale, fixed value apply layer whole. example, colour = \"red\" linewidth = 3. geom's documentation Aesthetics section lists available options. 'required' aesthetics passed params. Please note passing unmapped aesthetics vectors technically possible, order required length guaranteed parallel input data. constructing layer using stat_*() function, ... argument can used pass parameters geom part layer. example stat_density(geom = \"area\", outline.type = \"\"). geom's documentation lists parameters can accept. Inversely, constructing layer using geom_*() function, ... argument can used pass parameters stat part layer. example geom_area(stat = \"density\", adjust = 0.5). stat's documentation lists parameters can accept. key_glyph argument layer() may also passed .... can one functions described key glyphs, change display layer legend.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmticks.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Add tick marks to a Kaplan-Meier survival curve — geom_kmticks","text":"geom_kmticks understands following aesthetics (required aesthetics bold): x survival/censoring times. automatically mapped stat_kmticks() y survival probability estimates. automatically mapped stat_kmticks() smallest level sort order assumed 0, warning alpha color linetype size","code":""},{"path":[]},{"path":"https://smouksassi.github.io/ggquickeda/reference/geom_kmticks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add tick marks to a Kaplan-Meier survival curve — geom_kmticks","text":"","code":"library(ggplot2) sex <- rbinom(250, 1, .5) df <- data.frame(time = exp(rnorm(250, mean = sex)), status = rbinom(250, 1, .75), sex = sex) ggplot(df, aes(time = time, status = status, color = factor(sex), group = factor(sex))) +  geom_km() + geom_kmticks(col=\"black\")"},{"path":"https://smouksassi.github.io/ggquickeda/reference/get_source_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the source code of a ","title":"Retrieve the source code of a ","text":"Retrieve source code \"sourceable\" 'ggplot2'","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/get_source_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the source code of a ","text":"","code":"get_source_code(x)"},{"path":"https://smouksassi.github.io/ggquickeda/reference/ggcontinuousexpdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a continuous exposure fit plot — ggcontinuousexpdist","title":"Create a continuous exposure fit plot — ggcontinuousexpdist","text":"Produces logistic fit plot facettable exposures/quantiles/distributions ggplot2","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/ggcontinuousexpdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a continuous exposure fit plot — ggcontinuousexpdist","text":"","code":"ggcontinuousexpdist(   data = effICGI,   response = \"response\",   endpoint = \"Endpoint\",   DOSE = \"DOSE\",   color_fill = \"DOSE\",   exposure_metrics = c(\"AUC\", \"CMAX\"),   exposure_metric_split = c(\"median\", \"tertile\", \"quartile\", \"none\"),   exposure_metric_soc_value = -99,   exposure_metric_plac_value = 0,   exposure_distribution = c(\"distributions\", \"lineranges\", \"none\"),   dose_plac_value = \"Placebo\",   xlab = \"Exposure Values\",   ylab = \"Response\",   mean_obs_byexptile = TRUE,   mean_text_size = 5,   mean_obs_bydose = TRUE,   mean_obs_bydose_plac = FALSE,   N_text_size = 5,   binlimits_text_size = 5,   binlimits_ypos = -Inf,   binlimits_color = \"gray70\",   dist_position_scaler = 0.2,   dist_offset = 0,   dist_scale = 0.9,   lineranges_ypos = -1,   lineranges_dodge = 1,   lineranges_doselabel = FALSE,   proj_bydose = TRUE,   yproj = TRUE,   yproj_xpos = 0,   yproj_dodge = 0.2,   yaxis_position = c(\"left\", \"right\"),   facet_formula = NULL,   theme_certara = TRUE,   return_list = FALSE )"},{"path":"https://smouksassi.github.io/ggquickeda/reference/ggcontinuousexpdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a continuous exposure fit plot — ggcontinuousexpdist","text":"data Data use multiple endpoints stacked response (values), Endpoint(endpoint name) response name column holding response values endpoint name column holding name/key endpoint default Endpoint DOSE name column holding DOSE values default DOSE color_fill name column used color/fill default DOSE column exposure_metrics name(s) column(s) stacked expname exptile split exposure_metric_split exposure_metric_split one \"median\", \"tertile\", \"quartile\", \"none\" exposure_metric_soc_value special exposure code standard care default -99 exposure_metric_plac_value special exposure code placebo default 0 exposure_distribution one distributions, lineranges none dose_plac_value string identifying placebo DOSE column xlab text used x axis label ylab text used y axis label mean_obs_byexptile observed probability exptile TRUE/FALSE mean_text_size mean text size default 5 mean_obs_bydose observed mean dose TRUE/FALSE mean_obs_bydose_plac observed probability placebo dose TRUE/FALSE N_text_size N exposure bin text size default 5 binlimits_text_size 5 binlimits text size binlimits_ypos binlimits y position default 0 binlimits_color binlimits text color default \"gray70\" dist_position_scaler space occupied distribution default 0.2 dist_offset offset distribution position starts default 0 dist_scale scaling parameter ggridges default 0.9 lineranges_ypos put lineranges -1 lineranges_dodge lineranges vertical dodge value 1 lineranges_doselabel TRUE/FALSE proj_bydose project probabilities logistic curve TRUE/FALSE yproj project probabilities y axis TRUE/FALSE yproj_xpos y projection x position 0 yproj_dodge y projection dodge value 0.2 yaxis_position put y axis \"left\" \"right\" facet_formula facet formula use otherwise endpoint ~ expname theme_certara apply certara colors format strips default colour/fill return_list return True list datasets plot returned instead plot","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/ggcontinuousexpdist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a continuous exposure fit plot — ggcontinuousexpdist","text":"","code":"# Example 1 library(ggplot2) library(patchwork) effICGI <- logistic_data |> dplyr::filter(!is.na(ICGI7))|> dplyr::filter(!is.na(AUC)) effICGI$DOSE <- factor(effICGI$DOSE,                       levels=c(\"0\", \"600\", \"1200\",\"1800\",\"2400\"),                       labels=c(\"Placebo\", \"600 mg\", \"1200 mg\",\"1800 mg\",\"2400 mg\")) effICGI$STUDY <- factor(effICGI$STUDY)     effICGI <- tidyr::gather(effICGI,Endpoint,response,ICGI7,BRLS) a <- ggcontinuousexpdist(data = effICGI |> dplyr::filter(Endpoint ==\"ICGI7\"),                  response = \"response\",                  endpoint = \"Endpoint\",                  exposure_metrics = c(\"AUC\"),                  exposure_metric_split = c(\"quartile\"),                  exposure_metric_soc_value = -99,                  exposure_metric_plac_value = 0,                  dist_position_scaler = 1, dist_offset = -1 ,                  yproj_xpos =  -20 ,                  yproj_dodge = 20 ,                  exposure_distribution =\"distributions\") #> Joining with `by = join_by(loopvariable, DOSE, quant_10)` #> Joining with `by = join_by(loopvariable, DOSE, quant_90)` #> Joining with `by = join_by(loopvariable, DOSE, quant_25)` #> Joining with `by = join_by(loopvariable, DOSE, quant_75)` #> Joining with `by = join_by(loopvariable, DOSE, medexp)`  b <- ggcontinuousexpdist(data = effICGI |> dplyr::filter(Endpoint ==\"BRLS\"),                  response = \"response\",                  endpoint = \"Endpoint\",                  exposure_metrics = c(\"AUC\"),                  exposure_metric_split = c(\"quartile\"),                  exposure_metric_soc_value = -99,                  exposure_metric_plac_value = 0,                  dist_position_scaler = 4.2, dist_offset = 5 ,                  yproj_xpos =  -20 ,                  yproj_dodge = 20 ,                  exposure_distribution =\"distributions\",                  return_list = FALSE)             #> Joining with `by = join_by(loopvariable, DOSE, quant_10)` #> Joining with `by = join_by(loopvariable, DOSE, quant_90)` #> Joining with `by = join_by(loopvariable, DOSE, quant_25)` #> Joining with `by = join_by(loopvariable, DOSE, quant_75)` #> Joining with `by = join_by(loopvariable, DOSE, medexp)` (a / b)  + plot_layout(guides = \"collect\") &  theme(legend.position = \"top\") #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> Picking joint bandwidth of 11.7 #> Warning: Removed 244 rows containing non-finite outside the scale range #> (`stat_density_ridges()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_pointrange()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_text()`). #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`). #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 4 rows containing non-finite outside the scale range (`stat_smooth()`). #> Picking joint bandwidth of 11.7 #> Warning: Removed 244 rows containing non-finite outside the scale range #> (`stat_density_ridges()`). #> Warning: Removed 4 rows containing missing values or values outside the scale range #> (`geom_point()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_pointrange()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_text()`).   #Example 2 effICGI$SEX <- as.factor(effICGI$SEX) ggcontinuousexpdist(data = effICGI |>   dplyr::filter(Endpoint ==\"ICGI7\"),                  response = \"response\",                  endpoint = \"Endpoint\",                  color_fill = \"SEX\",                  exposure_metrics = c(\"AUC\"),                  exposure_metric_split = c(\"quartile\"),                  exposure_metric_soc_value = -99,                  exposure_metric_plac_value = 0,                  dist_position_scaler = 1, dist_offset = -1 ,                  yproj_xpos =  -20 ,                  yproj_dodge = 20 ,                  exposure_distribution =\"lineranges\") #> Joining with `by = join_by(loopvariable, SEX, color_fill2, DOSE, quant_10)` #> Joining with `by = join_by(loopvariable, SEX, color_fill2, DOSE, quant_90)` #> Joining with `by = join_by(loopvariable, SEX, color_fill2, DOSE, quant_25)` #> Joining with `by = join_by(loopvariable, SEX, color_fill2, DOSE, quant_75)` #> Joining with `by = join_by(loopvariable, SEX, color_fill2, DOSE, medexp)` #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_pointrange()`). #> Warning: Removed 2 rows containing missing values or values outside the scale range #> (`geom_text()`).  if (FALSE) { # \\dontrun{ #Example 5 } # }"},{"path":"https://smouksassi.github.io/ggquickeda/reference/ggkmrisktable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Kaplan-Meier plot with risk table — ggkmrisktable","title":"Create a Kaplan-Meier plot with risk table — ggkmrisktable","text":"Produces km plot facettable risk table ggplot2","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/ggkmrisktable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Kaplan-Meier plot with risk table — ggkmrisktable","text":"","code":"ggkmrisktable(   data = lung_long,   time = \"time\",   status = \"DV\",   endpoint = \"Endpoint\",   groupvar1 = \"Endpoint\",   groupvar2 = \"expname\",   groupvar3 = \"none\",   exposure_metrics = c(\"age\", \"ph.karno\"),   exposure_metric_split = c(\"median\", \"tertile\", \"quartile\", \"none\"),   exposure_metric_soc_value = -99,   exposure_metric_plac_value = 0,   show_exptile_values = FALSE,   show_exptile_values_pos = c(\"left\", \"right\"),   show_exptile_values_textsize = 5,   show_exptile_values_order = c(\"default\", \"reverse\"),   color_fill = \"exptile\",   linetype = \"exptile\",   xlab = \"Time of follow_up\",   ylab = \"Overall survival probability\",   nrisk_table_plot = TRUE,   nrisk_table_variables = c(\"n.risk\", \"pct.risk\", \"n.event\", \"cum.n.event\", \"n.censor\"),   nrisk_table_breaktimeby = NULL,   nrisk_table_textsize = 4,   nrisk_position_scaler = 0.2,   nrisk_position_dodge = 0.2,   nrisk_offset = 0,   nrisk_filterout0 = FALSE,   km_logrank_pvalue = FALSE,   km_logrank_pvalue_pos = c(\"left\", \"right\"),   km_logrank_pvalue_textsize = 5,   km_trans = c(\"identity\", \"event\", \"cumhaz\", \"cloglog\"),   km_ticks = TRUE,   km_band = TRUE,   km_conf_int = 0.95,   km_conf_type = c(\"log\", \"plain\", \"log\", \"log-log\", \"logit\", \"none\"),   km_conf_lower = c(\"usual\", \"peto\", \"modified\"),   km_median = c(\"none\", \"median\", \"medianci\", \"table\"),   km_median_table_pos = c(\"left\", \"right\"),   km_median_table_order = c(\"default\", \"reverse\"),   km_yaxis_position = c(\"left\", \"right\"),   facet_formula = NULL,   facet_ncol = NULL,   facet_strip_position = c(\"top\", \"top\", \"top\", \"top\"),   theme_certara = TRUE,   return_list = FALSE )"},{"path":"https://smouksassi.github.io/ggquickeda/reference/ggkmrisktable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Kaplan-Meier plot with risk table — ggkmrisktable","text":"data Data use multiple endpoints stacked time, status, endpoint name time name column holding time event information default time status name column holding event information default DV endpoint name column holding name/key endpoint default Endpoint groupvar1 name column group , default Endpoint groupvar2 name column group addition groupvar1, default expname groupvar3 name column group addition groupvar1 groupvar2, default \"none\" exposure_metrics name(s) column(s) stacked expname exptile split exposure_metric_split exposure_metric_split one \"median\", \"tertile\", \"quartile\", \"none\" exposure_metric_soc_value special exposure code standard care default -99 exposure_metric_plac_value special exposure code placebo default 0 show_exptile_values FALSE show_exptile_values_pos \"left\" \"right\" show_exptile_values_textsize default 5 show_exptile_values_order order entries \"default\" \"reverse\" color_fill name column used color/fill default exptile linetype name column used linetype default exptile xlab text used x axis label ylab text used y axis label nrisk_table_plot TRUE nrisk_table_variables one : \"n.risk\", \"pct.risk\", \"n.event, \"cum.n.event, \"n.censor\" nrisk_table_breaktimeby NULL nrisk_table_textsize 4 nrisk_position_scaler 0.2 nrisk_position_dodge 0.2, negative values reverse order nrisk_offset 0 nrisk_filterout0 FALSE km_logrank_pvalue FALSE km_logrank_pvalue_pos \"left\" \"right\" km_logrank_pvalue_textsize pvalue text size default 5 km_trans one \"identity\",\"event\",\"cumhaz\",\"cloglog\" km_ticks TRUE km_band TRUE km_conf_int 0.95 km_conf_type default one \"log\", \"plain\", \"log-log\", \"logit\", \"none\" km_conf_lower one \"usual\", \"peto\", \"modified\" km_median add median survival information one \"none\", \"median\", \"medianci\", \"table\" km_median_table_pos table chosen put  \"left\" \"right km_median_table_order table chosen order entries \"default\" \"reverse\" km_yaxis_position put y axis \"left\" \"right facet_formula facet formula used otherwise ~ groupvar1 + groupvar2 + groupvar3 facet_ncol NULL specified automatic waiver used facet_strip_position position sequence variable used faceting default c(\"top\",\"top\",\"top\",\"top\") theme_certara apply certara colors format strips default colour/fill return_list return True list datasets plot returned instead plot","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/ggkmrisktable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Kaplan-Meier plot with risk table — ggkmrisktable","text":"","code":"library(tidyr) # Example 1 lung_long <-  survival::lung |>  dplyr::mutate(status = ifelse(status==1,0,1)) |>  tidyr::gather(Endpoint,DV,status) |>  dplyr::filter(!is.na(ph.karno))|>  dplyr::filter(!is.na(pat.karno))|>  dplyr::filter(!is.na(ph.ecog)) lung_long$ph.ecog <- ifelse(lung_long$ph.ecog>1,2,lung_long$ph.ecog) lung_long$ph.ecog <- as.factor(lung_long$ph.ecog ) lung_long$ph.ecog <- as.factor(lung_long$ph.ecog ) lung_long$facetdum <- \"(all)\"  ggkmrisktable(data = lung_long, time= \"time\", status =\"DV\",              exposure_metrics =c(\"age\",\"ph.karno\"),              exposure_metric_split = \"tertile\",              color_fill = \"exptile\",              linetype = \"expname\",              groupvar1 = \"Endpoint\",              groupvar2 = \"exptile\",              xlab = \"Time of follow_up\",              ylab =\"Overall survival probability\",              nrisk_table_variables = c(\"n.risk\",\"n.event\"),              km_median = \"medianci\",              km_band = FALSE,              nrisk_table_breaktimeby = 200,              facet_ncol = 3) #> Warning: The `position` argument in `strip_split()` is being recycled to match the length of the facetting variables,  as provided in the `facets`, `rows`, or `cols` arguments in the facet function.  #Example 2 ggkmrisktable(data = lung_long, time= \"time\", status =\"DV\",              exposure_metrics =c(\"age\",\"ph.karno\"),              exposure_metric_split = \"quartile\",              color_fill = \"exptile\",              linetype = \"none\",              groupvar1 = \"Endpoint\",              groupvar2 = \"exptile\",              xlab = \"Time of follow_up\",              ylab =\"Overall survival probability\",              nrisk_table_variables = c(\"cum.n.event\",\"pct.risk\",\"n.censor\"),              km_median = \"medianci\",              km_band = TRUE,              km_trans = \"event\",              show_exptile_values = TRUE,              show_exptile_values_pos = \"right\",              nrisk_table_breaktimeby = 200,              facet_ncol = 3,              facet_formula = ~expname) #> Warning: The `position` argument in `strip_split()` is being recycled to match the length of the facetting variables,  as provided in the `facets`, `rows`, or `cols` arguments in the facet function.  if (FALSE) { # \\dontrun{ #Example 3 ggkmrisktable(data = lung_long, time = \"time\", status = \"DV\",              exposure_metrics =c(\"ph.karno\",\"pat.karno\"),              exposure_metric_split = \"median\",              color_fill = \"exptile\",              linetype = \"exptile\",              groupvar1 = \"Endpoint\",              groupvar2 = \"expname\",              xlab = \"Time of follow_up\",              ylab =\"Overall survival probability\",              nrisk_table_variables = c(\"n.event\"),              km_trans = \"event\",              km_median = \"table\",              km_median_table_pos = \"right\",              km_logrank_pvalue = TRUE,              km_band = TRUE,              nrisk_table_breaktimeby = 200,              facet_ncol = 3,              facet_formula = ~expname) #Example 4 ggkmrisktable(data=lung_long,              exposure_metrics = c(\"ph.karno\",\"age\"),              exposure_metric_split = \"median\",              time = \"time\",              status =\"DV\",              color_fill = \"ph.ecog\",              linetype = \"ph.ecog\",              groupvar1 = \"Endpoint\",              groupvar2 = \"expname\",              groupvar3 = \"exptile\",              nrisk_filterout0 = FALSE,              nrisk_table_breaktimeby = 200,              km_logrank_pvalue = TRUE,              km_median = \"table\",              km_median_table_pos = \"left\",              facet_formula = ~expname+exptile) #Example 5  ggkmrisktable(data=lung_long,              exposure_metrics = c(\"ph.karno\",\"age\"),              exposure_metric_split = \"none\",               color_fill = \"none\",              linetype = \"none\",              nrisk_table_variables = c(\"n.risk\", \"pct.risk\", \"n.event\", \"cum.n.event\", \"n.censor\"),               km_median = \"table\",               nrisk_position_scaler = 0.1              )                            } # }"},{"path":"https://smouksassi.github.io/ggquickeda/reference/gglogisticexpdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a logistic fit plot — gglogisticexpdist","title":"Create a logistic fit plot — gglogisticexpdist","text":"Produces logistic fit plot facettable exposures/quantiles/distributions ggplot2","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/gglogisticexpdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a logistic fit plot — gglogisticexpdist","text":"","code":"gglogisticexpdist(   data = effICGI,   response = \"response\",   endpoint = \"Endpoint\",   DOSE = \"DOSE\",   color_fill = \"DOSE\",   logistic_by_color_fill = FALSE,   exposure_metrics = c(\"AUC\", \"CMAX\"),   exposure_metric_split = c(\"median\", \"tertile\", \"quartile\", \"none\"),   exposure_metric_soc_value = -99,   exposure_metric_plac_value = 0,   exposure_distribution = c(\"distributions\", \"lineranges\", \"none\"),   dose_plac_value = \"Placebo\",   xlab = \"Exposure Values\",   ylab = \"Probability of Response\",   points_alpha = 0.2,   points_show = TRUE,   prob_obs_byexptile = TRUE,   prob_obs_byexptile_group = \"none\",   prob_text_size = 5,   prob_obs_bydose = TRUE,   prob_obs_bydose_plac = FALSE,   Nresp_Ntot = TRUE,   Nresp_Ntot_ypos = c(\"with percentages\", \"top\"),   Nresp_Ntot_sep = \"/\",   binlimits_show = TRUE,   binlimits_text_size = 5,   binlimits_ypos = 0,   binlimits_color = \"gray70\",   dist_position_scaler = 0.2,   dist_offset = 0,   dist_scale = 0.9,   lineranges_ypos = 0.2,   lineranges_dodge = 0.15,   lineranges_doselabel = FALSE,   proj_bydose = TRUE,   yproj = TRUE,   yproj_xpos = 0,   yproj_dodge = 0.2,   yaxis_position = c(\"left\", \"right\"),   facet_formula = NULL,   theme_certara = TRUE,   return_list = FALSE )"},{"path":"https://smouksassi.github.io/ggquickeda/reference/gglogisticexpdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a logistic fit plot — gglogisticexpdist","text":"data Data use multiple endpoints stacked response (values 0/1), Endpoint(endpoint name) response name column holding response values  0/1 endpoint name column holding name/key endpoint default Endpoint DOSE name column holding DOSE values default DOSE color_fill name column used color/fill default DOSE column logistic_by_color_fill logistic fit split color ? default FALSE exposure_metrics name(s) column(s) stacked expname exptile split exposure_metric_split exposure_metric_split one \"median\", \"tertile\", \"quartile\", \"none\" exposure_metric_soc_value special exposure code standard care default -99 exposure_metric_plac_value special exposure code placebo default 0 exposure_distribution one distributions, lineranges none dose_plac_value string identifying placebo DOSE column xlab text used x axis label ylab text used y axis label points_alpha alpha transparency points points_show show 0/1 observations TRUE/FALSE prob_obs_byexptile observed probability exptile TRUE/FALSE prob_obs_byexptile_group additional grouping exptile probabilities default none prob_text_size probability text size default 5 prob_obs_bydose observed probability dose TRUE/FALSE prob_obs_bydose_plac observed probability placebo dose TRUE/FALSE Nresp_Ntot show N responders/Ntotal ? TRUE/FALSE Nresp_Ntot_ypos y position N responders/Ntotal two text elements first exptile second dose/color options include percentages top bottom Nresp_Ntot_sep character string separat N responders/ Ntotal default / binlimits_show show binlimits vertical lines TRUE/FALSE binlimits_text_size binlimits text size default 5 binlimits_ypos binlimits y position default 0 binlimits_color binlimits text color default \"gray70\" dist_position_scaler space occupied distribution default 0.2 dist_offset offset distribution position starts default 0 dist_scale scaling parameter ggridges default 0.9 lineranges_ypos put lineranges -1 lineranges_dodge lineranges vertical dodge value 1 lineranges_doselabel TRUE/FALSE proj_bydose project probabilities logistic curve TRUE/FALSE yproj project probabilities y axis TRUE/FALSE yproj_xpos y projection x position 0 yproj_dodge y projection dodge value 0.2 yaxis_position put y axis \"left\" \"right\" facet_formula facet formula use otherwise endpoint ~ expname theme_certara apply certara colors format strips default colour/fill return_list return True list datasets plot returned instead plot exposure_distribution_percent show percent distribution binlimits TRUE/FALSE exposure_distribution_percent_text_size distribution percentages text size default 5","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/gglogisticexpdist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a logistic fit plot — gglogisticexpdist","text":"","code":"# Example 1 library(ggplot2) effICGI <- logistic_data |> dplyr::filter(!is.na(ICGI))|> dplyr::filter(!is.na(AUC)) effICGI$DOSE <- factor(effICGI$DOSE,                       levels=c(\"0\", \"600\", \"1200\",\"1800\",\"2400\"),                       labels=c(\"Placebo\", \"600 mg\", \"1200 mg\",\"1800 mg\",\"2400 mg\")) effICGI$STUDY <- factor(effICGI$STUDY)     effICGI$ICGI2 <- effICGI$ICGI effICGI <- tidyr::gather(effICGI,Endpoint,response,ICGI,ICGI2) gglogisticexpdist(data = effICGI |>                  dplyr::filter(Endpoint==\"ICGI\"),                  response = \"response\",                  endpoint = \"Endpoint\",                  exposure_metrics = c(\"AUC\"),                  exposure_metric_split = c(\"quartile\"),                  exposure_metric_soc_value = -99,                  exposure_metric_plac_value = 0,                  exposure_distribution =\"distributions\",                  yproj_xpos = -15,                  yproj_dodge = 10,                  dist_position_scaler = 0.1,                  dist_offset = -0.1,                  Nresp_Ntot_ypos = c(\"with percentages\",\"bottom\"),                  prob_obs_bydose_plac = FALSE,                  prob_obs_byexptile_group = \"none\",                  binlimits_ypos = -0.08,                  points_alpha= 1) #> Joining with `by = join_by(loopvariable, DOSE, quant_10)` #> Joining with `by = join_by(loopvariable, DOSE, quant_90)` #> Joining with `by = join_by(loopvariable, DOSE, quant_25)` #> Joining with `by = join_by(loopvariable, DOSE, quant_75)` #> Joining with `by = join_by(loopvariable, DOSE, medexp)` #> Error in gglogisticexpdist(data = dplyr::filter(effICGI, Endpoint == \"ICGI\"),     response = \"response\", endpoint = \"Endpoint\", exposure_metrics = c(\"AUC\"),     exposure_metric_split = c(\"quartile\"), exposure_metric_soc_value = -99,     exposure_metric_plac_value = 0, exposure_distribution = \"distributions\",     yproj_xpos = -15, yproj_dodge = 10, dist_position_scaler = 0.1,     dist_offset = -0.1, Nresp_Ntot_ypos = c(\"with percentages\",         \"bottom\"), prob_obs_bydose_plac = FALSE, prob_obs_byexptile_group = \"none\",     binlimits_ypos = -0.08, points_alpha = 1): object 'exposure_distribution_percent' not found                   # Example 2                 gglogisticexpdist(data = effICGI |>                  dplyr::filter(Endpoint==\"ICGI\"),                  response = \"response\",                  endpoint = \"Endpoint\",                  exposure_metrics = c(\"CMAX\"),                  exposure_metric_split = c(\"tertile\"),                  exposure_metric_soc_value = -99,                  exposure_metric_plac_value = 0,                  exposure_distribution =\"lineranges\",                  lineranges_ypos = -0.2,                  lineranges_dodge = 0.2,                  prob_obs_bydose = TRUE,                  yproj_xpos = -1,                  yproj_dodge = 2,                  dist_position_scaler = 0.1) #> Joining with `by = join_by(loopvariable, DOSE, quant_10)` #> Joining with `by = join_by(loopvariable, DOSE, quant_90)` #> Joining with `by = join_by(loopvariable, DOSE, quant_25)` #> Joining with `by = join_by(loopvariable, DOSE, quant_75)` #> Joining with `by = join_by(loopvariable, DOSE, medexp)` #> `geom_smooth()` using formula = 'y ~ x' #> `geom_smooth()` using formula = 'y ~ x' #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_pointrange()`).    if (FALSE) { # \\dontrun{ #' # Example 3                 library(ggh4x) gglogisticexpdist(data = effICGI |>                  dplyr::filter(Endpoint==\"ICGI\"),                   response = \"response\",                  endpoint = \"Endpoint\",                  DOSE = \"DOSE\",                  exposure_metrics = c(\"AUC\"),                  exposure_metric_split = c(\"quartile\"),                  exposure_distribution =\"distributions\",                  exposure_metric_soc_value = -99,                  exposure_metric_plac_value = 0,                  dist_position_scaler = 0.15)+  facet_grid2(Endpoint~expname+DOSE2,scales=\"free\",  margins = \"DOSE2\",strip = strip_nested()) # Example 4   effICGI$SEX <- as.factor(effICGI$SEX)                gglogisticexpdist(data = effICGI  |>                  dplyr::filter(Endpoint==\"ICGI\"),                   response = \"response\",                  endpoint = \"Endpoint\",                  DOSE = \"DOSE\",                  color_fill = \"SEX\",                  exposure_metrics = c(\"AUC\"),                  exposure_metric_split = c(\"quartile\"),                  exposure_distribution =\"distributions\",                  exposure_metric_soc_value = -99,                  exposure_metric_plac_value = 0,                  lineranges_ypos = -0.2,                  yproj_xpos = -10,                  yproj_dodge = 20,                  prob_text_size = 6,                  binlimits_text_size = 6,                  Nresp_Ntot = TRUE,                  dist_position_scaler = 0.15)+                  ggplot2::scale_x_continuous(breaks = seq(0,350,50),                  expand = ggplot2::expansion(add= c(0,0),mult=c(0,0)))+                  ggplot2::coord_cartesian(xlim = c(-30,355))+                  ggplot2::facet_grid(Endpoint~expname+color_fill2, margins =\"color_fill2\" )  #Example 4b   effICGI$SEX <- as.factor(effICGI$SEX)  gglogisticexpdist(data = effICGI |>   dplyr::filter(Endpoint ==\"ICGI\"),                  response = \"response\",                  endpoint = \"Endpoint\",                  color_fill = \"SEX\",                  exposure_metrics = c(\"AUC\"),                  exposure_metric_split = c(\"quartile\"),                  exposure_metric_soc_value = -99,                  exposure_metric_plac_value = 0,                  dist_position_scaler = 1, dist_offset = -1 ,                  yproj_xpos =  -20 ,                  yproj_dodge = 20 ,                  exposure_distribution =\"lineranges\")                   #Example 5 gglogisticexpdist(data = effICGI |> dplyr::filter(Endpoint==\"ICGI\"),                    response = \"response\",                   endpoint = \"Endpoint\",                   DOSE = \"DOSE\",                   exposure_metrics = c(\"AUC\"),                   exposure_metric_split = c(\"quartile\"),                   exposure_distribution =\"distributions\",                   exposure_metric_soc_value = -99,                   exposure_metric_plac_value = 0,                   dist_position_scaler = 0.15)+                  facet_grid(Endpoint~expname+exptile,scales=\"free\",                  margins = \"exptile\") #Example 6 a <- gglogisticexpdist(data = effICGI, #                    response = \"response\",                   endpoint = \"Endpoint\",                   DOSE = \"DOSE\",yproj_dodge = 36,                   exposure_metrics = c(\"AUC\"),                   exposure_metric_split = c(\"quartile\"),                   exposure_distribution =\"lineranges\",                   exposure_metric_soc_value = -99,                   exposure_metric_plac_value = 0) +   facet_grid(Endpoint~expname,switch = \"both\") b <-   gglogisticexpdist(data = effICGI, #                      response = \"response\",                     endpoint = \"Endpoint\",                     DOSE = \"DOSE\",yproj_dodge = 2,                     exposure_metrics = c(\"CMAX\"),                     exposure_metric_split = c(\"quartile\"),                     exposure_distribution =\"lineranges\",                     exposure_metric_soc_value = -99,                     exposure_metric_plac_value = 0,                     yaxis_position = \"right\")+   facet_grid(Endpoint~expname,switch = \"x\")+   theme(strip.text.y.right = element_blank(),         strip.background.y = element_blank()) library(patchwork) (a | b ) +   plot_layout(guides = \"collect\", axes = \"collect_x\")&   theme(legend.position = \"top\")  #Example 7 effICGI <- logistic_data |> dplyr::filter(!is.na(ICGI))|> dplyr::filter(!is.na(AUC)) effICGI$DOSE <- factor(effICGI$DOSE,                       levels=c(\"0\", \"600\", \"1200\",\"1800\",\"2400\"),                       labels=c(\"Placebo\", \"600 mg\", \"1200 mg\",\"1800 mg\",\"2400 mg\")) effICGI$STUDY <- factor(effICGI$STUDY) effICGI$ICGI2 <- ifelse(effICGI$ICGI7 < 4,1,0) effICGI$ICGI3 <- ifelse(effICGI$ICGI7 < 5,1,0)  effICGI <- tidyr::gather(effICGI,Endpoint,response,ICGI,ICGI2,ICGI3) effICGI$endpointcol2 <- effICGI$Endpoint gglogisticexpdist(data = effICGI,                   response = \"response\",                  endpoint = \"Endpoint\",                   exposure_metrics = c(\"AUC\"),                   exposure_metric_split = c(\"median\"),                   exposure_metric_soc_value = -99,                   exposure_metric_plac_value = 0,                   color_fill = \"endpointcol2\",                   prob_obs_byexptile = FALSE,                   logistic_by_color_fill = TRUE,                   Nresp_Ntot = TRUE,                   exposure_distribution =\"distributions\",                   lineranges_doselabel = TRUE,                   prob_obs_bydose = TRUE,                   proj_bydose = FALSE,                   yproj = FALSE,                   dist_position_scaler = 0.1,                   dist_offset = -0.1)+   facet_grid(expname~.,scales=\"free_x\") } # }"},{"path":"https://smouksassi.github.io/ggquickeda/reference/ggquickeda-ggproto.html","id":null,"dir":"Reference","previous_headings":"","what":"Geom Proto — GeomKm","title":"Geom Proto — GeomKm","text":"Geom Proto Geom Proto Geom Proto Geom Proto Geom Proto Geom Proto","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/logistic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Exposure Response Data — logistic_data","title":"Simulated Exposure Response Data — logistic_data","text":"dataset containing data suitable logistic regression","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/logistic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Exposure Response Data — logistic_data","text":"","code":"logistic_data"},{"path":"https://smouksassi.github.io/ggquickeda/reference/logistic_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Exposure Response Data — logistic_data","text":"data frame 600 rows 10 variables STUDY Study identifier ID Subject Identifier DOSE Dose, mg GBDS Dose, alternative salt SEX Sex subject AGE age subject, years WT weight subject, kg RACE Race subject CRCL Creatinine clearance BRLS RLS score PRLS RLS score AUC Area curve exposure CMAX Maximun concentration exposure ICGI response 0/1 ICGI7 response 1 7","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/logistic_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated Exposure Response Data — logistic_data","text":"inspired real data submission","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/logistic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Exposure Response Data — logistic_data","text":"","code":"logistic_data #> # A tibble: 749 × 15 #>    STUDY    ID  DOSE  GBDS   SEX   AGE    WT  RACE  CRCL  BRLS  PRLS   AUC  CMAX #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1    52   150  1200   625     1    55   105     5   125    19     0  89.1   6   #>  2    52   151  1200   625     2    52    74     1    96    29     8 114.    8.6 #>  3    52   152  1200   625     1    50    77     5    97    19     3  75.6   5.8 #>  4    52   153  1200   625     1    38   103     5   209    16     4  69.8   4.6 #>  5    52   155  1200   625     2    51    91     5   159    25     9  74.3   6.8 #>  6    52   156  1200   625     2    47    83     5   131    23     5  90.1   7.5 #>  7    52   157  1200   625     2    52    69     5    71    20     6  61.6   4.9 #>  8    52   158  1200   625     1    36    85     5   155    26     8  71.3   5.4 #>  9    52   159  1200   625     1    46    85     5   138    16     5  64.3   5.7 #> 10    52   160  1200   625     2    58    78     5   108    19     1 101.    8.2 #> # ℹ 739 more rows #> # ℹ 2 more variables: ICGI <dbl>, ICGI7 <dbl>"},{"path":"https://smouksassi.github.io/ggquickeda/reference/merge_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"merge step function utility — merge_steps","title":"merge step function utility — merge_steps","text":"merge step function utility","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/merge_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge step function utility — merge_steps","text":"","code":"merge_steps(s1, s2)"},{"path":"https://smouksassi.github.io/ggquickeda/reference/plus.html","id":null,"dir":"Reference","previous_headings":"","what":"Add 'ggplot2' layer to a sourceable 'ggplot2' — +","title":"Add 'ggplot2' layer to a sourceable 'ggplot2' — +","text":"Overwrite plus operator \"sourceable\" object used, source code kept","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/plus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add 'ggplot2' layer to a sourceable 'ggplot2' — +","text":"","code":"e1 + e2"},{"path":"https://smouksassi.github.io/ggquickeda/reference/run_ggquickeda.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the ggquickeda application — run_ggquickeda","title":"Run the ggquickeda application — run_ggquickeda","text":"Run ggquickeda application.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/run_ggquickeda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the ggquickeda application — run_ggquickeda","text":"","code":"run_ggquickeda(data = NULL, ...)"},{"path":"https://smouksassi.github.io/ggquickeda/reference/run_ggquickeda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the ggquickeda application — run_ggquickeda","text":"data initial data.frame load application. ... Additional arguments bookmarking","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/run_ggquickeda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the ggquickeda application — run_ggquickeda","text":"","code":"if (interactive()) {   run_ggquickeda() }"},{"path":"https://smouksassi.github.io/ggquickeda/reference/sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated Pharmacokinetic Concentration Data — sample_data","title":"Simulated Pharmacokinetic Concentration Data — sample_data","text":"dataset containing concentration-time data given dose subject characteristics help app exploration.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated Pharmacokinetic Concentration Data — sample_data","text":"","code":"sample_data"},{"path":"https://smouksassi.github.io/ggquickeda/reference/sample_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated Pharmacokinetic Concentration Data — sample_data","text":"data frame 600 rows 10 variables ID Subject Identifier, integer 1 150 Time Time dose given drug sample measured, hours Amt dose given corresponding Time, milligrams Conc drug concentrations plasma sample, mg/L Age age subject, years Weight weight subject, kg Gender Sex subject, factor Female Male levels Race Race subject, factor Asian, Black, Caucasian, Hispanic levels Dose dose group subject, milligrams AGECAT age category subject, variable cutting Age two values 0/1","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/sample_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Simulated Pharmacokinetic Concentration Data — sample_data","text":"\"sd_oral_richpk\" 'PKPDmisc' R package additional AGECAT variable","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/sample_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulated Pharmacokinetic Concentration Data — sample_data","text":"","code":"sample_data #> # A tibble: 1,800 × 10 #>       ID  Time   Amt  Conc   Age Weight Gender Race      Dose AGECAT #>    <int> <dbl> <int> <dbl> <int>  <int> <chr>  <chr>    <int>  <int> #>  1     1  0     5000  0       56     94 Male   Hispanic  5000      0 #>  2     1  0.25     0  8.61    56     94 Male   Hispanic  5000      0 #>  3     1  0.5      0 19.4     56     94 Male   Hispanic  5000      0 #>  4     1  1        0 34.0     56     94 Male   Hispanic  5000      0 #>  5     1  2        0 30.2     56     94 Male   Hispanic  5000      0 #>  6     1  3        0 31.3     56     94 Male   Hispanic  5000      0 #>  7     1  4        0 25.0     56     94 Male   Hispanic  5000      0 #>  8     1  6        0 23.4     56     94 Male   Hispanic  5000      0 #>  9     1  8        0 23.5     56     94 Male   Hispanic  5000      0 #> 10     1 12        0 14.7     56     94 Male   Hispanic  5000      0 #> # ℹ 1,790 more rows"},{"path":"https://smouksassi.github.io/ggquickeda/reference/sourceable.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a 'ggplot2' object sourceable — sourceable","title":"Make a 'ggplot2' object sourceable — sourceable","text":"Define 'ggplot2' object \"sourceable\", means knows keep track source code (parameter must 'ggplot2' object)","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/sourceable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a 'ggplot2' object sourceable — sourceable","text":"","code":"sourceable(x)"},{"path":"https://smouksassi.github.io/ggquickeda/reference/stairstepn.html","id":null,"dir":"Reference","previous_headings":"","what":"step function utility from ggalt — stairstepn","title":"step function utility from ggalt — stairstepn","text":"step function utility ggalt","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stairstepn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"step function utility from ggalt — stairstepn","text":"","code":"stairstepn(data, yvars = \"y\")"},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_km.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a Kaplan Meier Estimate of Survival — stat_km","title":"Adds a Kaplan Meier Estimate of Survival — stat_km","text":"Adds Kaplan Meier Estimate Survival","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_km.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a Kaplan Meier Estimate of Survival — stat_km","text":"","code":"stat_km(   mapping = NULL,   data = NULL,   geom = \"km\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   trans = scales::identity_trans(),   firstx = 0,   firsty = 1,   type = \"kaplan-meier\",   start.time = 0,   ... )"},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_km.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a Kaplan Meier Estimate of Survival — stat_km","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). trans Transformation apply survival probabilities. Defaults \"identity\". options include \"event\", \"cumhaz\", \"cloglog\", define using trans_new. firstx, firsty starting point survival curves. default, plot program obeys tradition plot start (0,1). type older argument combined stype ctype, now deprecated. Legal values \"kaplan-meier\" equivalent stype=1, ctype=1, \"fleming-harrington\" equivalent stype=2, ctype=1, \"fh2\" equivalent stype=2, ctype=2. start.time numeric value specifying time start calculating survival information. resulting curve survival conditional surviving start.time. ... arguments passed survfit.formula","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_km.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a Kaplan Meier Estimate of Survival — stat_km","text":"data.frame additional columns: x x data y Kaplan-Meier Survival Estimate x","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_km.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds a Kaplan Meier Estimate of Survival — stat_km","text":"stat computing confidence intervals Kaplan-Meier survival estimate right-censored data. requires aesthetic mapping x observation times status indicates event status, 0=alive, 1=dead 1/2 (2=death). Logical status supported.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_km.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Adds a Kaplan Meier Estimate of Survival — stat_km","text":"stat_km understands following aesthetics (required aesthetics bold): time survival times status censoring indicator, see Surv information. alpha color linetype size","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_km.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a Kaplan Meier Estimate of Survival — stat_km","text":"","code":"library(ggplot2) sex <- rbinom(250, 1, .5) df <- data.frame(time = exp(rnorm(250, mean = sex)), status = rbinom(250, 1, .75), sex = sex) ggplot(df, aes(time = time, status = status, color = factor(sex))) +  stat_km()   ## Examples illustrating the options passed to survfit.formula  p1 <- ggplot(df, aes(time = time, status = status)) p1 + stat_km()  p1 + stat_km(trans = \"cumhaz\")  # for cloglog plots also log transform the time axis p1 + stat_km(trans = \"cloglog\") + scale_x_log10() #> Warning: log-10 transformation introduced infinite values.  p1 + stat_km(type = \"fleming-harrington\")  p1 + stat_km(start.time = 5)"},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmband.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds confidence bands to a Kaplan Meier Estimate of Survival — stat_kmband","title":"Adds confidence bands to a Kaplan Meier Estimate of Survival — stat_kmband","text":"Adds confidence bands Kaplan Meier Estimate Survival","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmband.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds confidence bands to a Kaplan Meier Estimate of Survival — stat_kmband","text":"","code":"stat_kmband(   mapping = NULL,   data = NULL,   geom = \"kmband\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   trans = \"identity\",   firstx = 0,   firsty = 1,   type = \"kaplan-meier\",   error = \"greenwood\",   conf.type = \"log\",   conf.lower = \"usual\",   start.time = 0,   conf.int = 0.95,   ... )"},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmband.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds confidence bands to a Kaplan Meier Estimate of Survival — stat_kmband","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). trans Transformation apply survival probabilities. Defaults \"identity\". options include \"event\", \"cumhaz\", \"cloglog\", define using scales::trans_new(). firstx, firsty starting point survival curves. default, plot program obeys tradition plot start (0,1). type older argument combined stype ctype, now deprecated. Legal values \"kaplan-meier\" equivalent stype=1, ctype=1, \"fleming-harrington\" equivalent stype=2, ctype=1, \"fh2\" equivalent stype=2, ctype=2. error either string \"greenwood\" Greenwood formula \"tsiatis\" Tsiatis formula, (first character necessary). default \"greenwood\". conf.type One \"none\", \"plain\", \"log\" (default), \"log-log\" \"logit\". conf.lower character string specify modified lower limits curve, upper limit remains unchanged. Possible values \"usual\" (unmodified), \"peto\", \"modified\". modified lower limit based \"effective n\" argument. confidence bands agree usual calculation death time, unlike usual bands confidence interval becomes wider censored observation. extra width obtained multiplying usual variance factor m/n, n number currently risk m number risk last death time. (bands thus agree un-modified bands death time.) especially useful survival curves long flat tail. Peto lower limit based \"effective n\" argument modified limit, also replaces usual Greenwood variance term simple approximation. known conservative. start.time numeric value specifying time start calculating survival information. resulting curve survival conditional surviving start.time. conf.int level two-sided confidence interval survival curve(s). Default 0.95. ... arguments passed survfit.formula","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmband.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds confidence bands to a Kaplan Meier Estimate of Survival — stat_kmband","text":"data.frame additional columns: x x data ymin Lower confidence limit KM curve ymax Upper confidence limit KM curve","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmband.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds confidence bands to a Kaplan Meier Estimate of Survival — stat_kmband","text":"stat computing confidence intervals Kaplan-Meier survival estimate right-censored data. requires aesthetic mapping x observation times status indicates event status, 0=alive, 1=dead 1/2 (2=death). Logical status supported.","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmband.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Adds confidence bands to a Kaplan Meier Estimate of Survival — stat_kmband","text":"stat_kmband understands following aesthetics (required aesthetics bold): time survival times status censoring indicator, see Surv information. alpha color linetype linewidth","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmband.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds confidence bands to a Kaplan Meier Estimate of Survival — stat_kmband","text":"","code":"library(ggplot2) sex <- rbinom(250, 1, .5) df <- data.frame(time = exp(rnorm(250, mean = sex)), status = rbinom(250, 1, .75), sex = sex) ggplot(df, aes(time = time, status = status, color = factor(sex))) +  stat_km()   ## Examples illustrating the options passed to survfit.formula  p1 <- ggplot(df, aes(time = time, status = status)) p1 + stat_km() + stat_kmband(conf.int = .99)  p1 + stat_kmband(error = \"greenwood\",fill=\"red\",alpha=0.2) +  stat_kmband(error = \"tsiatis\",fill=\"blue\",alpha=0.2)+ stat_km()  p1 + stat_km() + stat_kmband(conf.type = \"log-log\")+ stat_kmband(conf.type = \"log\")"},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmticks.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds tick marks to a Kaplan Meier Estimate of Survival — stat_kmticks","title":"Adds tick marks to a Kaplan Meier Estimate of Survival — stat_kmticks","text":"Adds tick marks Kaplan Meier Estimate Survival","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmticks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds tick marks to a Kaplan Meier Estimate of Survival — stat_kmticks","text":"","code":"stat_kmticks(   mapping = NULL,   data = NULL,   geom = \"kmticks\",   position = \"identity\",   show.legend = NA,   inherit.aes = TRUE,   trans,   ... )"},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmticks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds tick marks to a Kaplan Meier Estimate of Survival — stat_kmticks","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position position adjustment use data layer. can used various ways, including prevent overplotting improving display. position argument accepts following: result calling position function, position_jitter(). method allows passing extra arguments position. string naming position adjustment. give position string, strip function name position_ prefix. example, use position_jitter(), give position \"jitter\". information ways specify position, see layer position documentation. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). trans Transformation apply survival probabilities. Defaults \"identity\". options include \"event\", \"cumhaz\", \"cloglog\", define using trans_new. ... arguments passed survfit.formula","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmticks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds tick marks to a Kaplan Meier Estimate of Survival — stat_kmticks","text":"data.frame additional columns: x x data y Kaplan-Meier Survival Estimate x","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmticks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds tick marks to a Kaplan Meier Estimate of Survival — stat_kmticks","text":"stat computing tick marks Kaplan-Meier survival estimate right-censored data. tick marks appear censoring time also death time, default plot.survfit. requires aesthetic mapping x observation times status indicates event status, normally 0=alive, 1=dead. choices TRUE/FALSE (TRUE = death) 1/2 (2=death).","code":""},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmticks.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Adds tick marks to a Kaplan Meier Estimate of Survival — stat_kmticks","text":"stat_kmticks understands following aesthetics (required aesthetics bold): time survival times status censoring indicator, see Surv information. alpha color linetype size","code":""},{"path":[]},{"path":"https://smouksassi.github.io/ggquickeda/reference/stat_kmticks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds tick marks to a Kaplan Meier Estimate of Survival — stat_kmticks","text":"","code":"library(ggplot2) sex <- rbinom(250, 1, .5) df <- data.frame(time = exp(rnorm(250, mean = sex)), status = rbinom(250, 1, .75), sex = sex) ggplot(df, aes(time = time, status = status, color = factor(sex))) +  stat_km() + stat_kmticks()"},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-0319000","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.3.1.9000","title":"ggquickeda 0.3.1.9000","text":"added possible positions put N observations Mean Median tabs: (fixed, mean, median) added arguments show.exptile_values, show.exptile_values_pos show.exptile_values_order ggkmrisktable() requested Mathilde fixes gglogisticexpdist() ggcontinuousexpdist() exposure_distributionand exposure_metric_split set “none” added arguments gglogisticexpdist() ggcontinuousexpdist() dist_scale return_list","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-031","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.3.1","title":"ggquickeda 0.3.1","text":"CRAN release: 2024-01-15 rebuilt docs fixed broken link fixing regressions introduced bookmarking fixing errors new R rules logical comparison length | versus || fixing error aspect.ratio numeric (also fixed ggplot2) fixing regressions GGally::ggpairs() color group added support pasting values two/three variables just placeholder added function ggkmrisktable() add facetable risk tables, km ntiles split exposures added function gglogisticexpdist() ggcontinuousexpdist() add facetable logistic/linear regression exposures split ntiles exposure distributions dose/group optional y axis projections added link github pages description thanks @olivroy Fix part ggplot2 3.4.0 deprecation warnings. (#27, @olivroy)","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-030","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.3.0","title":"ggquickeda 0.3.0","text":"CRAN release: 2023-03-26 added options drop levels user discrete shape linetype scales fixed GGally::ggpairs() group input added ability combine y variables fixed issue barplot flip applied bivariate plots fixed issues barplot percent labels position fill added checkboxes parse x y axis labels text added ability regenerate state apps better UX workflow Phoenix (James Craig, #28) removed Welcome message added padding James Craig added co-author","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-022","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.2.2","title":"ggquickeda 0.2.2","text":"CRAN release: 2022-05-16 fixed bug linear model equation slope intercept values switched fixed bug flip barplot working (auto flipped barplot already supported) added group aesthetic enhancements pairs plot bug fixes expansion, zooming user input (plots x variable(s) y variable(s)) restored target window annotations work factor/character x axis added possibility change size linetype density plots added possibility choose shape boxplot outlier points added options x y scale tick formatting now visible pairs plot active added options identity line placement custom/target text plot edges added checkbox recode numeric variables -99 missing removed ggstance dependency adding needed positions global.r fixed typos Visualizing Summary Data vignette data labels","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-021","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.2.1","title":"ggquickeda 0.2.1","text":"CRAN release: 2021-06-22 added new method factor reordering min/max difference added mean +/- multiples standard deviations summary using mean_sdl function allowed transform label mean median 10^ (useful x/y axis logged) fixed namespace bug calling scales package functions like muted trans_xxx without package loaded, now using ::. fixed bug updateColourInput now available colourpicker package reactivating colorgradient widget shinyjqui bug updated fixed added distiller continuous Blues brewer discrete palettes added possibility specify palette viridis discrete continuous possibility reverse scale added support POSIXct variables previously treated character automatic zoom slider now working POSIXct automatic Slider User zoom now controllable facets scales free discrete scale longer applied x y variable inherits POSIXct modifying X/Y scale expansion now optional (fixed auto expansion free facets)","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-020","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.2.0","title":"ggquickeda 0.2.0","text":"CRAN release: 2021-02-15 Added Violin plots Added options fixes histograms, barplots densities Added options Median/Mean/N labels (N digits, justification, edge positions.) Added points position_quasirandom position_beeswarm Added multiple enhancements theme control like panel.border, plot.tag.position X Y Axes Titles formatting Added multiple enhancements options ggpairs logticks rug marks can now outside plot panel coordinates cartesian clip can now set x/y axis percent comma labels format now works univariate plots x/y zoom now works one x /y variables selected long x/y discrete axes labels can now wrapped specified length UI updates auto hiding univariate plots, pairs, km Boxplots UI rework Readme updated summary level data vignette updated","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-019","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.9","title":"ggquickeda 0.1.9","text":"CRAN release: 2020-12-16 Made errorbars Median/PI Mean/CI ignore mapped size fixed bug labels Median/PI Mean/CI data used table1 enhancements: na..category, render.missing, footnote caption. table1 enhancements: added N missing Sum stats. added second field order recode variables stacking e.g. xvars yvars added two new variable factor sorting methods: ‘N Unique’ ‘Sum’ fixed bug custom reorder ignored current order starting point added ggplot tag field fixed bug user selecting variables x y now stacking x y separate. fixed bug x axis label barplots special cases updated UI barplot Density ability suppress label legend UI updates show relevant options pairs plot histogram/barplot Automatic color theme switching avoid enough color fill errors switched github actions","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-018","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.8","title":"ggquickeda 0.1.8","text":"CRAN release: 2020-11-05 Added possibility use one x variable(s) y variable(s) Added option explicit Missing Category custom cuts Added option compute inverse Numeric variables Moved rounding division/inverse Added possibility round data labels plotting Added blank shape type can multiple y(s) layers point plotted. Added Docker configuration","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-017","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.7","title":"ggquickeda 0.1.7","text":"CRAN release: 2020-07-21 Added support semicolon separated files added package version App Title Added geom_rug support x/y additional variable(s) Added geom_ribbon mean/CI geom_errorbar median/PI (UI updates) Enable dodge mean/CI median/PI take account specified width Updated UI facets options added controls bold, angle justification Allowing specifying multi_line=TRUE facet labellers Added theme options strip.switch.pad.grid strip.switch.pad.wrap Added possibility completely remove facet strips background outline Updated UI legends options added controls legend/legend box, justification margins Added control legend.spacing.y Added continuous x/y scale(s) asymmetrical expansion values Added position adjustments points (e.g. dodge) Minor enhancements correlation coefficients Updated UI theme options Added support break.time.argument risk table, enhanced K-M UI added inputs conf.type conf.lower Fixed code generation issues adding dependencies Bumped minimum R version 3.6.0 minimum ggplot version 3.3.1 Refreshed vignettes readme screenshots","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-016","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.6","title":"ggquickeda 0.1.6","text":"CRAN release: 2020-04-17 withheld gradientInput addition (shinyjqui issue) fixed bug risktable nothing selected added controls plot margins added controls legend margins strip.position facet_wrap labeller options added parsed x y axis titles custom position legends specification legend items background fill updated intro vignette","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-015","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.5","title":"ggquickeda 0.1.5","text":"CRAN release: 2019-10-07 let ggpairs plots reflect custom color scales update emax smoother add e0 apply fix weight aesthetic emax smoother update code compatible breaking change tidyr 1.0 user defined shape linetype scales user defined custom labels custom x y axes ticks user can divide constant just column","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-014","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.4","title":"ggquickeda 0.1.4","text":"CRAN release: 2019-09-03 custom labels text, label, text_repel label_repel user can now add custom colors 20 added user control specify mid color continuous color scales added user control specify strip text colour colourpicker background color order stacked data sd value added smooth emax model via nls parameter values added parameter values lm fit made text size adjustable viridis custom continuous color scale added possibility divide multiple columns specified one (e.g. dose normalization) “Treat Categories:” now accepts character variables addition numeric. “Treat Numeric:” added enable converting columns read factors. updated docs geom stat_km() stat_kmband() stat_kmticks().","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-013","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.3","title":"ggquickeda 0.1.3","text":"CRAN release: 2019-04-10 UI options improvements KM (line sizes, transparency, ignore group color), linetype mappping changed default error stat_kmbands(), borrowed stairstepn ggalt applying zoo::na.locf() deal NA. added possibility add median survival without CI Using ggpubr::stat_cor() compute correlations flexibility margin facets added ability ignore grouping ignore color mapping correlation coefficient added possibility dodge means medians added possibility specify means medians N Values transparency default seed text_repel geom text,label, repel variants position dodge median mean labels added transparency control densities histograms well linetype mappping added binwidth control histogram (user defined auto), position dodge added window adjustment control densities linetypes predefined quantiles added possibility add one therapeutic window fixed bug categorical x axis added possibility remove x/y axis tick labels fixes continuous scales logic Added initial support GGally::ggpairs()","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-012","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.2","title":"ggquickeda 0.1.2","text":"CRAN release: 2019-02-24 bug fixed cases plot data apply filtering updated expanded merge multiple levels factor added mappings shape points linetypes lines associated custom legends possibility ignore added possibility choosing linetypes lines various UI improvements points, lines, qr, smooth, median mean added options control size transparency qr, smooth, median mean lines added predefined qr 25 75% added options force mean median shapes fixed bug median line honoring transparency Medianselected UI tweaks added options boxplot outliers (size transparency) separate color control major minor gridlines possibility remove added annotation_logticks() make faceting less prone fail user mistakenly choose variable rows columns make user defined color/fill scales","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-011","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.1","title":"ggquickeda 0.1.1","text":"CRAN release: 2018-09-27 added options control facets strip background fill placement added options control panel spacing reworked barplots able sort frequency reverse frequency histograms densities gain options flexibility added possibility reorder factors length another variable added possibility keep last row id added options label x y axes ticks e.g. using prettyNum() added styling options horizontal vertical reference lines added methods correlation coefficient added p-values slope(s) adjusted Rsquare linear regression smoother selected fixed bug x y axis zoom work situations added stats table1 well possibility cut quantiles eqcut() added possibility merge multiple levels factor fixed bug commas label names broke factor levels using “Recode/Reorder Categories”","code":""},{"path":"https://smouksassi.github.io/ggquickeda/news/index.html","id":"ggquickeda-010","dir":"Changelog","previous_headings":"","what":"ggquickeda 0.1.0","title":"ggquickeda 0.1.0","text":"CRAN release: 2018-04-25 Initial CRAN release","code":""}]
